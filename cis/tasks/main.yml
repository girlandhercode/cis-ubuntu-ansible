---

  - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install cramfs /bin/true'
      state: present
      create: yes

  - name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install freevxfs /bin/true'
      state: present
      create: yes

  - name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install jffs2 /bin/true'
      state: present
      create: yes

  - name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install hfs /bin/true'
      state: present
      create: yes

  - name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install hfsplus /bin/true'
      state: present
      create: yes

  - name: 1.1.1.6 Ensure mounting of squashfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install squashfs /bin/true'
      state: present
      create: yes

  - name: 1.1.1.7 Ensure mounting of udf filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install udf /bin/true'
      state: present
      create: yes

  - name: 1.1.1.8 Ensure mounting of FAT filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install vfat /bin/true'
      state: present
      create: yes

  - name: 1.1.2 Ensure separate partition exists for /tmp (Scored)
    command: grep '\s/tmp\s' /etc/fstab
    register: tmp_partition
    failed_when: tmp_partition.rc == 1
    changed_when: False
    ignore_errors: True

  - apt:
      name: python-pip
      state: present
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.3

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.3

  - mountopts:
      name: /tmp
      option: nodev
      state: present
    when: tmp_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.3

  - shell: mount | grep /tmp|grep nodev
    register: mount_tmp_output
    failed_when: False
    ignore_errors: True
    tags: 
      - section1 
      - section1.1
      - section1.1.3

  - name: 1.1.3 Ensure nodev option set on /tmp partition (Scored)
    command: mount -o remount,nodev /tmp
    ignore_errors: True
    when: tmp_partition.rc == 0 and mount_tmp_output.rc != 0

  - apt:
      name: python-pip
      state: present
    when: tmp_partition.rc == 0

  - name: install dependencies for mountopts-module
    pip:
      name: fstab
    when: tmp_partition.rc == 0

  - mountopts:
      name: /tmp
      option: nosuid
      state: present
    when: tmp_partition.rc == 0

  - shell: mount | grep /tmp|grep nosuid
    register: mount_tmp_output
    failed_when: false
    ignore_errors: True
    changed_when: False

  - name: 1.1.4 Ensure nosuid option set on /tmp partition (Scored)
    command: mount -o remount,nosuid /tmp
    ignore_errors: True
    when: tmp_partition.rc == 0 and mount_tmp_output.rc != 0

  - name: 1.1.12 Ensure separate partition exists for /home (Scored)
    command: grep '\s/home\s' /etc/fstab
    register: home_partition
    failed_when: home_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section1
      - section1.1
      - section1.1.12

  - mountopts:
      name: /home
      option: nodev
      state: present
    when: home_partition.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.13

  - shell: mount | grep /home|grep nodev
    register: mount_home_output
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.13

  - name: 1.1.13 Ensure nodev option set on /home partition (Scored)
    command: mount -o remount,nodev /home
    ignore_errors: True
    when: home_partition.rc == 0 and mount_home_output.rc == 1
    tags:
      - section1
      - section1.1
      - section1.1.13

  - name: 1.3.1 Ensure AIDE is installed (Scored)
    apt:
      name: aide
      state: present
    register: aide_installed
    when: use_aide == True

  - name: 1.3.2 Ensure filesystem integrity is regularly checked (Scored)
    cron:
      name: "Check files integrity"
      minute: 0
      hour: 5
      job: "/usr/sbin/aide --check"
    when: use_aide == True

  - name: 1.4.1 Ensure permissions on bootloader config are configured (Scored)
    file:
      dest: /boot/grub/grub.cfg
      owner: root
      group: root
      mode: 0600

  - command: grep "^password" /boot/grub/grub.cfg
    register: boot_password
    failed_when: false
    ignore_errors: yes 
    changed_when: False

  - name: 1.4.2 Ensure bootloader password is set (Scored)
    lineinfile:
        dest: /etc/grub.d/40_custom
        regexp: '^{{item.name}}'
        line: '{{item.name}}{{item.value}} {{item.value2}}'
        state: present
    with_items:
      - { name: 'set superusers=' , value: '"{{grub_superuser}}"' , value2: '' }
      - { name: 'password_pbkdf2 ' , value: '{{grub_superuser}}' , value2: '{{root_password_grub}}' }
    when: boot_password.rc == 1 and set_bootloader_password == true
    notify: update grub

  - command: grep "^root:[*\!]:" /etc/shadow
    register: root_password_set
    failed_when: false
    ignore_errors: True
    changed_when: False


  - command: grep "hard core" /etc/security/limits.conf
    register: hard_core
    failed_when: False
    changed_when: False
    tags:
      - section1
      - section1.5
      - section1.5.1

  - name: 1.5.1 Ensure core dumps are restricted (Scored)
    lineinfile:
      dest: '/etc/security/limits.conf'
      line: '* hard core 0'
      state: present
      insertbefore: '^# End of file'
    when: hard_core.rc != 0

  - name: 1.5.1 Ensure core dumps are restricted (Scored)
    sysctl:
      name: fs.suid_dumpable
      value: 0
      state: present
    when: restrict_core_dumps == True


  - include: section_02.yml

  - include: section_03.yml

  - include: section_04.yml

  - include: section_05.yml

  - include: section_06.yml